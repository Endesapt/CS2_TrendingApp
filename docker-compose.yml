version: '3.4'

networks:
  mynet:
volumes:
    cockroachdb:
    pgadmin-data:
    rabbitmq-data:
    redis-data:
    redis.conf:
    certs:
    elastic-data:
services:
  dbupdateworker:
    image: ${DOCKER_REGISTRY-}dbupdateworker
    build:
      context: .
      dockerfile: DbUpdateWorker/Dockerfile
    depends_on:
        crdb:
            condition: service_healthy
        rabbitmq:
            condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=user
      - RABBITMQ_PASS=1234
      - DB_HOST=crdb
    networks:
        mynet:
  crdb:
    image: cockroachdb/cockroach:latest
    ports:
      - 26257:26257
      - 8080:8080
    command: start-single-node --insecure
    volumes:
      - cockroachdb:/cockroach/cockroach-data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 3s
      timeout: 3s
      retries: 5
    networks:
        mynet:
  server:
    image: ${DOCKER_REGISTRY-}server
    build:
      context: .
      dockerfile: Server/Dockerfile
    depends_on:
        dbupdateworker:
            condition: service_started
    networks:
        mynet:
    environment:
        - STEAM_API_KEY=${STEAM_API_KEY}
        - APP_HOST=http://localhost:8000
  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=1234
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 30s
        timeout: 10s
        retries: 5
        start_period: 10s
    networks:
        mynet:
  redis:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis-data:/root/redis
      - redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=1234
      - REDIS_PORT=6379
    healthcheck:
        test: ["CMD", "redis-cli","ping"]
    networks:
        mynet:
  telegram-sender:
    build:
        context: ./TelegramSender/
    environment:
        - BOT_TOKEN=${TG_BOT_KEY}
        - REDIS_USER=default
        - REDIS_PASSWORD=1234
        - REDIS_HOST=redis
        - RABBITMQ_HOST=amqp://user:1234@rabbitmq
    depends_on:
        rabbitmq:
            condition: service_healthy
        redis:
            condition: service_healthy
    networks:
        mynet:
  nginx:
    build:
        context: ./
        dockerfile: ./nginx/Dockerfile
        args:
            - REACT_APP_API_URL=http://localhost:8000/api/
    volumes:
       - ./nginx/nginx.conf://etc/nginx/nginx.conf:ro
    depends_on:
        - server
    ports:
        - 8000:80
    networks:
        mynet:
    
  

   
    
    

